{"version":3,"sources":["main.min.js","main.js"],"names":["getFormData","form","document","getElementById","data","Object","keys","elements","map","key","isNaN","value","emailValid","email","re","test","formLoading","event","target","children","contact_form__submit","disabled","innerHTML","className","style","display","formLoadingReset","inputsFilled","filled","message","length","name","handleFormSubmit","preventDefault","isLoading","allInputsFilled","url","action","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","status","console","log","responseText","encoded","encodeURIComponent","join","send","menuTrigger","overlay","classList","toggle","overlayActive","contains","scrollTo","getAttribute","scrollIntoView","behavior","viewChanger","onViewChange","evt","view","currentTarget","itemName","textContent","querySelector","backButton","querySelectorAll","listItems","j","addEventListener","k","loaded","menuBtn","menuBtnClose","menuLinks","getElementsByClassName","i","isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","error"],"mappings":"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","file":"main.min.js","sourcesContent":["'use strict'; /*!\n               *\n               *  Web Starter Kit\n               *  Copyright 2015 Google Inc. All rights reserved.\n               *\n               *  Licensed under the Apache License, Version 2.0 (the \"License\");\n               *  you may not use this file except in compliance with the License.\n               *  You may obtain a copy of the License at\n               *\n               *    https://www.apache.org/licenses/LICENSE-2.0\n               *\n               *  Unless required by applicable law or agreed to in writing, software\n               *  distributed under the License is distributed on an \"AS IS\" BASIS,\n               *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n               *  See the License for the specific language governing permissions and\n               *  limitations under the License\n               *\n               */\n/* eslint-env browser */\n(function () {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n  /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\n\n\n  if ('serviceWorker' in navigator && (\n  window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js').\n    then(function (registration) {\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function () {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function () {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                'service worker became redundant.');\n\n              default:\n              // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function (e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  // Custom JavaScript\n\n  /**\n  * Gets contact form input values\n  * @return {object} set of inputs -> object[input_name] = input_value\n  */\n  function getFormData() {\n    var form = document.getElementById('contact_form');\n    // get form inputs data\n    var data = {};\n    Object.keys(form.elements).map(function (key) {\n      if (isNaN(key)) {\n        data[key] = form.elements[key].value;\n      }\n    });\n    return data;\n  }\n\n  /**\n    * Email validation regexp\n    * @param {string} email for validation\n    * @return {boolean} email validation result\n    */\n  function emailValid(email) {\n    var re = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n    return !re.test(email);\n  }\n\n  /**\n    * Form state - loading\n    * @param {Object} event DOM form event\n    * @return {boolean} is loading? true\n    */\n  function formLoading(event) {\n    // make visual change for loading state\n    event.target.children.contact_form__submit.disabled = true;\n    event.target.children.contact_form__submit.innerHTML = 'Wysyłanie...';\n    event.target.children.contact_form__submit.className += ' button--loading';\n    document.getElementById('form__error').style.display = 'none';\n\n    return true;\n  }\n  /**\n    * Form loading state - reset\n    * @param {Object} event DOM form event\n    * @return {boolean} is loading? false\n    */\n  function formLoadingReset(event) {\n    // make visual change for loading state\n    event.target.children.contact_form__submit.disabled = false;\n    event.target.children.contact_form__submit.innerHTML = 'Wyślij';\n    event.target.children.contact_form__submit.className = 'button button--primary';\n\n    return false;\n  }\n  /**\n    * Detects empty inputs in form\n    * @param {Object} event DOM form event\n    * @return {boolean} every form inputs filled?\n    */\n  function inputsFilled(event) {\n    var filled = true;\n    if (event.target.message.value.length === 0) {\n      filled = false;\n    }\n    if (event.target.name.value.length === 0) {\n      filled = false;\n    }\n    if (event.target.email.value.length === 0) {\n      filled = false;\n    }\n\n    return filled;\n  }\n\n  /**\n    * Send form data\n    * @param {Object} event DOM event\n    */\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    var data = getFormData();\n    var isLoading = false;\n    var allInputsFilled = inputsFilled(event);\n\n    // VALIDATION\n    if (isLoading || !allInputsFilled) {\n      document.getElementById('form__error').innerHTML = 'Uzupełnij wszystkie pola formularza';\n      document.getElementById('form__error').style.display = 'block';\n    } else if (emailValid(data.email)) {\n      document.getElementById('form__error').innerHTML = 'Wpisz prawidłowy adres e-mail';\n      document.getElementById('form__error').style.display = 'block';\n    } else {\n      // VALIDATION PASSED\n      isLoading = formLoading(event);\n      var url = event.target.action;\n      var xhr = new XMLHttpRequest();\n      xhr.open('POST', url);\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n      xhr.onreadystatechange = function () {\n        isLoading = formLoadingReset(event);\n        if (xhr.status === 200) {\n          document.getElementById('contact_form').style.display = 'none';\n          document.getElementById('thankyou_message').style.display = 'block';\n        } else {\n          document.getElementById('form__error').innerHTML = 'Coś poszło nie tak :( <br /> Wyślij proszę e-mail na adres: <a href=\"mailto:waskowski.mikolaj@gmail.com\">waskowski.mikolaj@gmail.com</a>. <br /> Dziękuję!';\n          document.getElementById('form__error').style.display = 'block';\n          console.log(xhr.responseText);\n        }\n      };\n      // url encode form data for sending as post data\n      var encoded = Object.keys(data).map(function (key) {\n        return encodeURIComponent(key) + '=' + encodeURIComponent(data[key]);\n      }).join('&');\n\n      xhr.send(encoded);\n    }\n  }\n\n  /**\n    * Activating overlay menu\n    */\n  function menuTrigger() {\n    var overlay = document.getElementById('overlay');\n    overlay.classList.toggle('menu-overlay--open');\n  }\n\n  /**\n    * Check that menu is opened (overlay is active)\n    * @return {boolean} Menu active?\n    */\n  function overlayActive() {\n    return document.getElementById('overlay').classList.contains('menu-overlay--open');\n  }\n\n  /**\n    * Scrolls to element, closing menu overlay if needed\n    * @param {Object} event DOM event\n    */\n  function scrollTo(event) {\n    // goto section marked as button data-goto attribute\n    document.getElementById(event.target.getAttribute('data-goto')).scrollIntoView({\n      behavior: 'smooth' });\n\n    // need to close menu overlay?\n    if (overlayActive()) {\n      menuTrigger();\n    }\n  }\n\n  /**\n    * Make portfolio item alive\n    */\n  function viewChanger() {\n    var view = document.querySelector('.view');\n    var itemName = document.querySelector('.portfolio__item-name');\n    var backButton = document.querySelectorAll('.button--back');\n    var listItems = document.querySelectorAll('.button--show-more');\n\n    function onViewChange(evt) {\n      // change view - add \"active\" class to main view container\n      view.classList.toggle('view--change');\n      // change details data\n      if (evt.currentTarget.classList.contains('button--show-more')) {\n        itemName.textContent = evt.currentTarget.getAttribute('data-itemid');\n      }\n      evt.preventDefault();\n    }\n\n    for (var j = 0; j < listItems.length; j++) {\n      listItems[j].addEventListener('click', onViewChange, false);\n    }\n    for (var k = 0; k < backButton.length; k++) {\n      backButton[k].addEventListener('click', onViewChange, false);\n    }\n  }\n\n  /**\n    * Runs while document is loaded...\n    */\n  function loaded() {\n    // prevent default submit form action, redirect to handleFormSubmit()\n    var form = document.getElementById('contact_form');\n    form.addEventListener('submit', handleFormSubmit, false);\n    console.log('Info: form submit function loaded');\n\n    // make internal buttons alive\n    var menuBtn = document.getElementById('menu-button');\n    menuBtn.addEventListener('click', menuTrigger, false);\n    var menuBtnClose = document.getElementById('menu-button-close');\n    menuBtnClose.addEventListener('click', menuTrigger, false);\n    var menuLinks = document.getElementsByClassName('internal-link');\n    for (var i = 0; i < menuLinks.length; i++) {\n      menuLinks[i].addEventListener('click', scrollTo, false);\n    }\n    console.log('Info: menu trigger functions loaded');\n\n    // make portoflio item alive\n    viewChanger();\n  }\n  document.addEventListener('DOMContentLoaded', loaded, false);\n})();\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  // Custom JavaScript\n\n  /**\n  * Gets contact form input values\n  * @return {object} set of inputs -> object[input_name] = input_value\n  */\n  function getFormData() {\n    var form = document.getElementById('contact_form');\n    // get form inputs data\n    var data = {};\n    Object.keys(form.elements).map(function(key) {\n      if (isNaN(key)) {\n        data[key] = form.elements[key].value;\n      }\n    });\n    return data;\n  }\n\n  /**\n  * Email validation regexp\n  * @param {string} email for validation\n  * @return {boolean} email validation result\n  */\n  function emailValid(email) {\n    var re = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n    return !re.test(email);\n  }\n\n  /**\n  * Form state - loading\n  * @param {Object} event DOM form event\n  * @return {boolean} is loading? true\n  */\n  function formLoading(event) {\n    // make visual change for loading state\n    event.target.children.contact_form__submit.disabled = true;\n    event.target.children.contact_form__submit.innerHTML = 'Wysyłanie...';\n    event.target.children.contact_form__submit.className += ' button--loading';\n    document.getElementById('form__error').style.display = 'none';\n\n    return true;\n  }\n  /**\n  * Form loading state - reset\n  * @param {Object} event DOM form event\n  * @return {boolean} is loading? false\n  */\n  function formLoadingReset(event) {\n    // make visual change for loading state\n    event.target.children.contact_form__submit.disabled = false;\n    event.target.children.contact_form__submit.innerHTML = 'Wyślij';\n    event.target.children.contact_form__submit.className = 'button button--primary';\n\n    return false;\n  }\n  /**\n  * Detects empty inputs in form\n  * @param {Object} event DOM form event\n  * @return {boolean} every form inputs filled?\n  */\n  function inputsFilled(event) {\n    var filled = true;\n    if (event.target.message.value.length === 0) {\n      filled = false;\n    }\n    if (event.target.name.value.length === 0) {\n      filled = false;\n    }\n    if (event.target.email.value.length === 0) {\n      filled = false;\n    }\n\n    return filled;\n  }\n\n  /**\n  * Send form data\n  * @param {Object} event DOM event\n  */\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    var data = getFormData();\n    var isLoading = false;\n    var allInputsFilled = inputsFilled(event);\n\n    // VALIDATION\n    if (isLoading || !allInputsFilled) {\n      document.getElementById('form__error').innerHTML = 'Uzupełnij wszystkie pola formularza';\n      document.getElementById('form__error').style.display = 'block';\n    } else if (emailValid(data.email)) {\n      document.getElementById('form__error').innerHTML = 'Wpisz prawidłowy adres e-mail';\n      document.getElementById('form__error').style.display = 'block';\n    } else {\n      // VALIDATION PASSED\n      isLoading = formLoading(event);\n      var url = event.target.action;\n      var xhr = new XMLHttpRequest();\n      xhr.open('POST', url);\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n      xhr.onreadystatechange = function() {\n        isLoading = formLoadingReset(event);\n        if (xhr.status === 200) {\n          document.getElementById('contact_form').style.display = 'none';\n          document.getElementById('thankyou_message').style.display = 'block';\n        } else {\n          document.getElementById('form__error').innerHTML = 'Coś poszło nie tak :( <br /> Wyślij proszę e-mail na adres: <a href=\"mailto:waskowski.mikolaj@gmail.com\">waskowski.mikolaj@gmail.com</a>. <br /> Dziękuję!';\n          document.getElementById('form__error').style.display = 'block';\n          console.log(xhr.responseText);\n        }\n      };\n      // url encode form data for sending as post data\n      var encoded = Object.keys(data).map(function(key) {\n        return encodeURIComponent(key) + '=' + encodeURIComponent(data[key]);\n      }).join('&');\n\n      xhr.send(encoded);\n    }\n  }\n\n  /**\n  * Activating overlay menu\n  */\n  function menuTrigger() {\n    var overlay = document.getElementById('overlay');\n    overlay.classList.toggle('menu-overlay--open');\n  }\n\n  /**\n  * Check that menu is opened (overlay is active)\n  * @return {boolean} Menu active?\n  */\n  function overlayActive() {\n    return document.getElementById('overlay').classList.contains('menu-overlay--open');\n  }\n\n  /**\n  * Scrolls to element, closing menu overlay if needed\n  * @param {Object} event DOM event\n  */\n  function scrollTo(event) {\n    // goto section marked as button data-goto attribute\n    document.getElementById(event.target.getAttribute('data-goto')).scrollIntoView({\n      behavior: 'smooth'\n    });\n    // need to close menu overlay?\n    if (overlayActive()) {\n      menuTrigger();\n    }\n  }\n\n  /**\n  * Make portfolio item alive\n  */\n  function viewChanger() {\n    var view = document.querySelector('.view');\n    var itemName = document.querySelector('.portfolio__item-name');\n    var backButton = document.querySelectorAll('.button--back');\n    var listItems = document.querySelectorAll('.button--show-more');\n\n    function onViewChange(evt) {\n      // change view - add \"active\" class to main view container\n      view.classList.toggle('view--change');\n      // change details data\n      if (evt.currentTarget.classList.contains('button--show-more')) {\n        itemName.textContent = evt.currentTarget.getAttribute('data-itemid');\n      }\n      evt.preventDefault();\n    }\n\n    for (var j = 0; j < listItems.length; j++) {\n      listItems[j].addEventListener('click', onViewChange, false);\n    }\n    for (var k = 0; k < backButton.length; k++) {\n      backButton[k].addEventListener('click', onViewChange, false);\n    }\n  }\n\n  /**\n  * Runs while document is loaded...\n  */\n  function loaded() {\n    // prevent default submit form action, redirect to handleFormSubmit()\n    var form = document.getElementById('contact_form');\n    form.addEventListener('submit', handleFormSubmit, false);\n    console.log('Info: form submit function loaded');\n\n    // make internal buttons alive\n    var menuBtn = document.getElementById('menu-button');\n    menuBtn.addEventListener('click', menuTrigger, false);\n    var menuBtnClose = document.getElementById('menu-button-close');\n    menuBtnClose.addEventListener('click', menuTrigger, false);\n    var menuLinks = document.getElementsByClassName('internal-link');\n    for (var i = 0; i < menuLinks.length; i++) {\n      menuLinks[i].addEventListener('click', scrollTo, false);\n    }\n    console.log('Info: menu trigger functions loaded');\n\n    // make portoflio item alive\n    viewChanger();\n  }\n  document.addEventListener('DOMContentLoaded', loaded, false);\n})();\n"]}